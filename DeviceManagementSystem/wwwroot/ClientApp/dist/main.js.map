{"version":3,"sources":["webpack:///./ClientApp/$_lazy_route_resource lazy namespace object","webpack:///./ClientApp/app/Guard/auth.guard.ts","webpack:///./ClientApp/app/Material/material.module.ts","webpack:///./ClientApp/app/adddevice/adddevice.component.css","webpack:///./ClientApp/app/adddevice/adddevice.component.html","webpack:///./ClientApp/app/adddevice/adddevice.component.ts","webpack:///./ClientApp/app/app.component.css","webpack:///./ClientApp/app/app.component.html","webpack:///./ClientApp/app/app.component.ts","webpack:///./ClientApp/app/app.module.ts","webpack:///./ClientApp/app/devices/devices.component.css","webpack:///./ClientApp/app/devices/devices.component.html","webpack:///./ClientApp/app/devices/devices.component.ts","webpack:///./ClientApp/app/devices/table/table.component.css","webpack:///./ClientApp/app/devices/table/table.component.html","webpack:///./ClientApp/app/devices/table/table.component.ts","webpack:///./ClientApp/app/login/login.component.css","webpack:///./ClientApp/app/login/login.component.html","webpack:///./ClientApp/app/login/login.component.ts","webpack:///./ClientApp/app/register/register.component.css","webpack:///./ClientApp/app/register/register.component.html","webpack:///./ClientApp/app/register/register.component.ts","webpack:///./ClientApp/app/service/auth.service.ts","webpack:///./ClientApp/app/service/data.service.ts","webpack:///./ClientApp/environments/environment.ts","webpack:///./ClientApp/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./ClientApp/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../service/auth.service'\nimport {Router} from '@angular/router'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n    constructor(private auth:AuthService,private router:Router) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n      if (this.auth.isLoggedIn) return true\r\n      else {\r\n          this.router.navigate(['']);\r\n          return false;\r\n      }\n  }\n}\n","﻿import { NgModule } from '@angular/core';\r\nimport {\r\n    MatAutocompleteModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCheckboxModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatCardModule,\r\n    MatChipsModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatExpansionModule,\r\n    MatFormFieldModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatStepperModule\r\n} from '@angular/material';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\n\r\n@NgModule({\r\n    imports: [\r\n        MatAutocompleteModule,\r\n        MatButtonModule,\r\n        MatButtonToggleModule,\r\n        MatCardModule,\r\n        MatCheckboxModule,\r\n        MatChipsModule,\r\n        MatDatepickerModule,\r\n        MatDialogModule,\r\n        MatExpansionModule,\r\n        MatFormFieldModule,\r\n        MatGridListModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatListModule,\r\n        MatMenuModule,\r\n        MatNativeDateModule,\r\n        MatPaginatorModule,\r\n        MatProgressBarModule,\r\n        MatProgressSpinnerModule,\r\n        MatRadioModule,\r\n        MatRippleModule,\r\n        MatSelectModule,\r\n        MatSidenavModule,\r\n        MatSliderModule,\r\n        MatSlideToggleModule,\r\n        MatSnackBarModule,\r\n        MatStepperModule,\r\n        MatSortModule,\r\n        MatTableModule,\r\n        MatTabsModule,\r\n        MatToolbarModule,\r\n        MatTooltipModule,\r\n        CdkTableModule\r\n    ],\r\n    exports: [\r\n        MatAutocompleteModule,\r\n        MatButtonModule,\r\n        MatButtonToggleModule,\r\n        MatCardModule,\r\n        MatCheckboxModule,\r\n        MatChipsModule,\r\n        MatDatepickerModule,\r\n        MatDialogModule,\r\n        MatExpansionModule,\r\n        MatGridListModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatListModule,\r\n        MatMenuModule,\r\n        MatNativeDateModule,\r\n        MatPaginatorModule,\r\n        MatProgressBarModule,\r\n        MatProgressSpinnerModule,\r\n        MatRadioModule,\r\n        MatRippleModule,\r\n        MatSelectModule,\r\n        MatSidenavModule,\r\n        MatSliderModule,\r\n        MatSlideToggleModule,\r\n        MatSnackBarModule,\r\n        MatStepperModule,\r\n        MatSortModule,\r\n        MatTableModule,\r\n        MatTabsModule,\r\n        MatToolbarModule,\r\n        MatTooltipModule,\r\n        CdkTableModule\r\n    ]\r\n})\r\nexport class MaterialModule {\r\n\r\n}\r\n","module.exports = \"\\r\\n.center {\\r\\n    width: 75%;\\r\\n    margin: 10px auto;\\r\\n}\\r\\n\\r\\n.main-div {\\r\\n    height: 70vh;\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n}\\r\\n\\r\\n.example-card {\\r\\n    max-width: 400px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"main-div\\\">\\r\\n    <mat-card class=\\\"example-card center\\\">\\r\\n        <mat-card-header>\\r\\n            <mat-card-title><h3>Add Device</h3></mat-card-title>\\r\\n        </mat-card-header>\\r\\n        <br />\\r\\n        <mat-card-content>\\r\\n            <form>\\r\\n                <table>\\r\\n                    <tr>\\r\\n                        <td>\\r\\n                            <mat-form-field style=\\\"width:350px !important;\\\" class=\\\"example-full-width\\\">\\r\\n                                <input matInput placeholder=\\\"Name\\\" [(ngModel)]=\\\"addInfo.Name\\\" name=\\\"Name\\\">\\r\\n                            </mat-form-field>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td>\\r\\n                            <mat-form-field style=\\\"width:350px !important;\\\" class=\\\"example-full-width\\\">\\r\\n                                <input matInput placeholder=\\\"Manufacturer\\\" [(ngModel)]=\\\"addInfo.manufacturer\\\" name=\\\"manufacturer\\\">\\r\\n                            </mat-form-field>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td>\\r\\n                            <mat-form-field style=\\\"width:350px !important;\\\" class=\\\"example-full-width\\\">\\r\\n                                <input matInput placeholder=\\\"Type\\\" [(ngModel)]=\\\"addInfo.type\\\" name=\\\"type\\\">\\r\\n                            </mat-form-field>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td>\\r\\n                            <mat-form-field style=\\\"width:350px !important;\\\" class=\\\"example-full-width\\\">\\r\\n                                <input matInput placeholder=\\\"OS\\\" [(ngModel)]=\\\"addInfo.OS\\\" name=\\\"OS\\\">\\r\\n                            </mat-form-field>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td>\\r\\n                            <mat-form-field style=\\\"width:350px !important;\\\" class=\\\"example-full-width\\\">\\r\\n                                <input matInput placeholder=\\\"OSVersion\\\" [(ngModel)]=\\\"addInfo.OSVersion\\\" name=\\\"OSVersion\\\">\\r\\n                            </mat-form-field>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td>\\r\\n                            <mat-form-field style=\\\"width:350px !important;\\\" class=\\\"example-full-width\\\">\\r\\n                                <input matInput placeholder=\\\"Processor\\\" [(ngModel)]=\\\"addInfo.Processor\\\" name=\\\"Processor\\\">\\r\\n                            </mat-form-field>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td>\\r\\n                            <mat-form-field style=\\\"width:350px !important;\\\" class=\\\"example-full-width\\\">\\r\\n                                <input matInput placeholder=\\\"RAM\\\" [(ngModel)]=\\\"addInfo.ram\\\" name=\\\"ram\\\">\\r\\n                            </mat-form-field>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </table>\\r\\n            </form>\\r\\n            <mat-spinner [style.display]=\\\"showSpinner ? 'block' : 'none'\\\"></mat-spinner>\\r\\n        </mat-card-content>\\r\\n        <mat-card-actions>\\r\\n            <button mat-raised-button (click)=\\\"AddDevice()\\\" color=\\\"primary\\\" style=\\\"margin-left:40%\\\">Submit</button>\\r\\n        </mat-card-actions>\\r\\n    </mat-card>\\r\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../service/data.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-adddevice',\n  templateUrl: './adddevice.component.html',\n  styleUrls: ['./adddevice.component.css']\n})\nexport class AdddeviceComponent implements OnInit {\n\n  constructor(private data:DataService,private router:Router) { }\n\n  ngOnInit() {\n  }\n\n  public addInfo = {\r\n      Name: \"\",\r\n      Manufacturer: \"\",\r\n      Type: \"\",\r\n      OS: \"\",\r\n      OSVersion: \"\",\r\n      Processor: \"\",\r\n      RAM:\"\"\r\n  }\n\n  AddDevice() {\n      this.data.addDevice(this.addInfo).subscribe(success =>\r\n      {\r\n          console.log(success)\r\n          this.router.navigate(['devices'])\r\n      },err=>console.log(err))\r\n  }\n\n}\n","module.exports = \".example-spacer {\\r\\n    flex: 1 1 auto;\\r\\n}\\r\\n.example-icon{\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n    <mat-toolbar-row>\\r\\n        <mat-icon class=\\\"example-icon\\\" (click)=\\\"goToLogin()\\\" *ngIf=\\\"!isLoggedIn()\\\">important_devices</mat-icon>\\r\\n        <mat-icon class=\\\"example-icon\\\" (click)=\\\"goToDevices()\\\" *ngIf=\\\"isLoggedIn()\\\">important_devices</mat-icon>\\r\\n        <button mat-button (click)=\\\"goToDevices()\\\" *ngIf=\\\"isLoggedIn()\\\">Devices</button>\\r\\n        <button mat-button (click)=\\\"goToAddDevice()\\\" *ngIf=\\\"isLoggedIn() && isAdmin()\\\">Add Device</button>\\r\\n        <button mat-button (click)=\\\"goToRegister()\\\" *ngIf=\\\"!isLoggedIn()\\\">Register</button>\\r\\n        <span class=\\\"example-spacer\\\"></span>\\r\\n        <button mat-button (click)=\\\"Logout()\\\" *ngIf=\\\"isLoggedIn()\\\">Logout</button>\\r\\n    </mat-toolbar-row>\\r\\n</mat-toolbar>\\r\\n<main>\\r\\n    <router-outlet>\\r\\n    </router-outlet>\\r\\n</main>\\r\\n\\r\\n\"","import { Component } from '@angular/core';\r\nimport { Router,NavigationEnd } from '@angular/router';\r\nimport { AuthService } from './service/auth.service'\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n    constructor(private router: Router, private auth: AuthService) { }\r\n\r\n    reloadPage() {\r\n        window.location.reload();\r\n    }\r\n\r\n    goToDevices() {\r\n        return this.router.navigate(['devices'])\r\n    }\r\n    goToRegister()\r\n    {\r\n        return this.router.navigate(['register'])\r\n    }\r\n    goToLogin() {\r\n        return this.router.navigate([''])\r\n    }\r\n    goToAddDevice() {\r\n        return this.router.navigate(['adddevice'])\r\n    }\r\n\r\n    isLoggedIn() {\r\n        return this.auth.isLoggedIn\r\n    }\r\n\r\n    isAdmin() {\r\n\r\n        if (localStorage.getItem('user') == 'admin')\r\n        {\r\n            return true;\r\n        }\r\n        else return false;\r\n    }\r\n\r\n    Logout() {\r\n        localStorage.clear();\r\n        return this.reloadPage();\r\n    }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MaterialModule } from './Material/material.module';\r\nimport { RouterModule } from '@angular/router';\r\nimport { HttpClientModule } from '@angular/common/http'\r\nimport { APP_BASE_HREF } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n//AuthGuard\r\nimport { AuthGuard } from './Guard/auth.guard';\r\nimport { DataService } from './service/data.service';\r\nimport { AuthService } from './service/auth.service';\r\n\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { DevicesComponent } from './devices/devices.component';\r\nimport { TableComponent } from './devices/table/table.component';\r\nimport { AdddeviceComponent } from './adddevice/adddevice.component';\r\n\r\nlet routes = [\r\n    {\r\n        path: '',\r\n        component: LoginComponent\r\n    },\r\n    {\r\n        path: 'register',\r\n        component: RegisterComponent,\r\n    },\r\n    {\r\n        path: 'devices',\r\n        component: DevicesComponent,\r\n        canActivate: [AuthGuard]\r\n\r\n    },\r\n    {\r\n        path: 'adddevice',\r\n        component: AdddeviceComponent,\r\n        canActivate: [AuthGuard]\r\n\r\n    }\r\n];\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    RegisterComponent,\r\n    LoginComponent,\r\n    DevicesComponent,\r\n    TableComponent,\r\n    AdddeviceComponent,\r\n  ],\r\n  imports: [\r\n      BrowserModule,\r\n      BrowserAnimationsModule,\r\n      MaterialModule,\r\n      HttpClientModule,\r\n      FormsModule,\r\n      RouterModule.forRoot(routes,\r\n          {\r\n              onSameUrlNavigation: 'reload',\r\n              useHash:true,\r\n              enableTracing: true\r\n          }\r\n      )\r\n  ],\r\n  providers: [AuthGuard, DataService, AuthService, { provide: APP_BASE_HREF, useValue: '/' }],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\"","module.exports = \"<app-table></app-table>\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from '../service/data.service';\r\nimport { Device } from '../service/device';\r\n\r\n@Component({\r\n  selector: 'app-devices',\r\n  templateUrl: './devices.component.html',\r\n  styleUrls: ['./devices.component.css']\r\n})\r\nexport class DevicesComponent implements OnInit {\r\n\r\n    constructor() { }\r\n\r\n    \r\n\r\n  ngOnInit() {\r\n      \r\n\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \".mat-list-item{\\r\\n    font-size:15px;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\" style=\\\"margin-top:50px\\\">\\r\\n    <div *ngFor=\\\"let element of devices\\\">\\r\\n        <mat-expansion-panel>\\r\\n            <mat-expansion-panel-header>\\r\\n                <mat-panel-title>\\r\\n                    <h6> {{element.name}}</h6>\\r\\n                </mat-panel-title>\\r\\n                <mat-panel-description *ngIf=\\\"(!element.user)\\\">\\r\\n                    <div style=\\\"color:#64cc64\\\">Available</div>\\r\\n                </mat-panel-description>\\r\\n                <mat-panel-description *ngIf=\\\"(element.user)\\\">\\r\\n                    <div style=\\\"color:#d03535\\\">Unavailable</div>\\r\\n                </mat-panel-description>\\r\\n            </mat-expansion-panel-header>\\r\\n            <mat-list role=\\\"list\\\">\\r\\n                <mat-list-item role=\\\"listitem\\\">Manufacturer: {{element.manufacturer}}</mat-list-item>\\r\\n                <mat-list-item role=\\\"listitem\\\">Type: {{element.type}}</mat-list-item>\\r\\n                <mat-list-item role=\\\"listitem\\\">OS: {{element.os}}</mat-list-item>\\r\\n                <mat-list-item role=\\\"listitem\\\">OSVersion: {{element.osVersion}}</mat-list-item>\\r\\n                <mat-list-item role=\\\"listitem\\\">Processor: {{element.processor}}</mat-list-item>\\r\\n                <mat-list-item role=\\\"listitem\\\">RAM: {{element.ram}}</mat-list-item>\\r\\n                <mat-list-item role=\\\"listitem\\\" *ngIf=\\\"(element.user)\\\">Assigned to: {{element.user.name}}</mat-list-item>\\r\\n                <mat-list-item role=\\\"listitem\\\">\\r\\n                    <button mat-button color=\\\"primary\\\" (click)=\\\"assignItem(element.id)\\\" *ngIf=\\\"!(element.user); else unassign\\\">Assign</button>\\r\\n                    <ng-template #unassign>\\r\\n                        <button mat-button color=\\\"primary\\\" (click)=\\\"unassignItem(element.id)\\\" *ngIf=\\\"checkUser(element.user.name)|| isAdmin()\\\">Unassign</button>\\r\\n                    </ng-template>\\r\\n                    <button mat-button color=\\\"warn\\\" (click)=\\\"removeItem(element.id)\\\" *ngIf=\\\"isAdmin()&&!(element.user)\\\">Delete</button>\\r\\n                </mat-list-item>\\r\\n            </mat-list>\\r\\n        </mat-expansion-panel>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit,Inject } from '@angular/core';\nimport { DataService } from '../../service/data.service';\nimport { Device } from '../../service/device';\nimport { Router } from '@angular/router'\nimport { AuthService } from '../../service/auth.service';\nimport { ChangeDetectorRef } from '@angular/core';\n\n\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.css']\n})\nexport class TableComponent implements OnInit {\n\n  constructor(private data:DataService, private router:Router,private cd: ChangeDetectorRef) { }\n\n  public devices: Device[] = [];\n\n\n  ngOnInit() { \n      this.getDevices();\n  }\n\n  getDevices() {\n      return this.data.getDevices().subscribe(success => {\r\n          this.devices = success;\r\n          console.log(success)\r\n      });\r\n  }\n\n  removeItem(id) {\n      return this.data.removeDevice(id).subscribe(success =>\r\n      {\r\n          console.log(success)\r\n          this.getDevices();\r\n      });\r\n  }\n\n  assignItem(id) {\n      return this.data.assignDevice(id).subscribe(success =>\r\n      {\r\n          console.log(success)\r\n          this.getDevices();\r\n      });\r\n  }\n\n  unassignItem(id) {\n      return this.data.unassignDevice(id).subscribe(success => {\r\n          this.cd.markForCheck()\r\n          console.log(success)\r\n          this.getDevices();\r\n      });\r\n  }\n\n  checkUser(user): boolean\n  {\n      if (user == localStorage.getItem('user')) return true\r\n      else return false;\r\n  }\n\n  isAdmin() {\n\n      if (localStorage.getItem('user') == 'admin') {\r\n          return true;\r\n      }\r\n      else return false;\r\n  }\n\n \n}\n\n\n","module.exports = \"\\r\\n.center {\\r\\n    width: 75%;\\r\\n    margin: 10px auto;\\r\\n}\\r\\n\\r\\n.main-div {\\r\\n    height: 100vh;\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n}\\r\\n\\r\\n.example-card {\\r\\n    max-width: 400px;\\r\\n   \\r\\n}\\r\\n\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"main-div\\\">\\r\\n    <mat-card class=\\\"example-card center\\\">\\r\\n        <mat-card-header>\\r\\n            <mat-card-title><h3>Login</h3></mat-card-title>\\r\\n        </mat-card-header>\\r\\n        <br />\\r\\n        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"errorMessage\\\">{{errorMessage}}</div>\\r\\n        <mat-card-content>\\r\\n\\r\\n            <form>\\r\\n                <table>\\r\\n                    <tr>\\r\\n                        <td>\\r\\n                            <mat-form-field style=\\\"width:350px !important;\\\" class=\\\"example-full-width\\\">\\r\\n                                <input matInput placeholder=\\\"Name\\\" [(ngModel)]=\\\"loginInfo.Name\\\" name=\\\"Name\\\" required>\\r\\n                            </mat-form-field>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td>\\r\\n                            <mat-form-field style=\\\"width:350px !important;\\\" class=\\\"example-full-width\\\">\\r\\n                                <input matInput placeholder=\\\"Password\\\" [(ngModel)]=\\\"loginInfo.password\\\" type=\\\"password\\\" name=\\\"password\\\" required>\\r\\n                            </mat-form-field>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </table>\\r\\n            </form>\\r\\n            <mat-spinner [style.display]=\\\"showSpinner ? 'block' : 'none'\\\"></mat-spinner>\\r\\n        </mat-card-content>\\r\\n        <mat-card-actions>\\r\\n            <button mat-raised-button (click)=\\\"onLogin()\\\" color=\\\"primary\\\" style=\\\"margin-left:40%\\\">Login</button>\\r\\n        </mat-card-actions>\\r\\n    </mat-card>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../service/auth.service';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { DataService } from '../service/data.service';\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n    navigationSubscription;\r\n    constructor(private auth: AuthService, private router: Router, private data: DataService) { }\r\n\r\n\r\n    ngOnInit() {\r\n\r\n\r\n    }\r\n    public errorMessage: string;\r\n\r\n    public loginInfo = {\r\n        Name: \"\",\r\n        password: \"\"\r\n    }\r\n\r\n    onLogin() {\r\n        this.auth.Login(this.loginInfo).subscribe(success => {\r\n            if (success.status == 200) {\r\n                this.auth.LoggingIn(true);\r\n                localStorage.setItem('user', success.body);\r\n                return this.router.navigate([\"devices\"])\r\n            }\r\n        }, err => {\r\n            this.errorMessage = \"Invalid Account\"\r\n        })\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n","module.exports = \"\\r\\n.center {\\r\\n    width: 75%;\\r\\n    margin: 10px auto;\\r\\n}\\r\\n\\r\\n.main-div {\\r\\n    height: 50vh;\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n}\\r\\n\\r\\n.example-card {\\r\\n    max-width: 400px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"main-div\\\">\\r\\n    <mat-card class=\\\"example-card center\\\">\\r\\n        <mat-card-header>\\r\\n            <mat-card-title><h3>Register</h3></mat-card-title>\\r\\n        </mat-card-header>\\r\\n        <br />\\r\\n        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"errorMessage\\\"><div *ngFor=\\\"let error of errorMessage\\\">{{error}}</div></div>\\r\\n        <div class=\\\"alert alert-success\\\" *ngIf=\\\"successMessage\\\">{{successMessage}}</div>\\r\\n        <mat-card-content>\\r\\n            <form>\\r\\n                <table>\\r\\n                    <tr>\\r\\n                        <td>\\r\\n                            <mat-form-field style=\\\"width:350px !important;\\\" class=\\\"example-full-width\\\">\\r\\n                                <input matInput placeholder=\\\"Name\\\" [(ngModel)]=\\\"registerInfo.Name\\\" name=\\\"Name\\\">\\r\\n                            </mat-form-field>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td>\\r\\n                            <mat-form-field style=\\\"width:350px !important;\\\" class=\\\"example-full-width\\\">\\r\\n                                <input matInput placeholder=\\\"Password\\\" [(ngModel)]=\\\"registerInfo.password\\\" type=\\\"password\\\" name=\\\"password\\\">\\r\\n                            </mat-form-field>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td>\\r\\n                            <mat-form-field style=\\\"width:350px !important;\\\" class=\\\"example-full-width\\\">\\r\\n                                <input matInput placeholder=\\\"Location\\\" [(ngModel)]=\\\"registerInfo.location\\\" name=\\\"location\\\">\\r\\n                            </mat-form-field>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </table>\\r\\n            </form>\\r\\n            <mat-spinner [style.display]=\\\"showSpinner ? 'block' : 'none'\\\"></mat-spinner>\\r\\n        </mat-card-content>\\r\\n        <mat-card-actions>\\r\\n            <button mat-raised-button (click)=\\\"onRegister()\\\" color=\\\"primary\\\" style=\\\"margin-left:40%\\\">Register</button>\\r\\n        </mat-card-actions>\\r\\n    </mat-card>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../service/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-register',\r\n    templateUrl: './register.component.html',\r\n    styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n    constructor(private auth: AuthService, private router: Router) { }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    public errorMessage: any[];\r\n    public successMessage: string;\r\n\r\n    public registerInfo = {\r\n        Name: \"\",\r\n        password: \"\",\r\n        location: \"\"\r\n    }\r\n\r\n    onRegister() {\r\n        this.auth.Register(this.registerInfo).subscribe(success => {\r\n            if (success.status == 200) {\r\n                console.log(success);\r\n                this.successMessage = \"Registration successful!\"\r\n\r\n\r\n            }\r\n        }, err => {\r\n            console.log(err);\r\n            this.errorMessage = err.error;\r\n\r\n        })\r\n\r\n        this.registerInfo.Name = ''\r\n        this.registerInfo.password = ''\r\n        this.registerInfo.location = ''\r\n        this.errorMessage = [];\r\n        this.successMessage = '';\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {  Response } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n    constructor(private http: HttpClient) { }\n\n    public isLoggedIn: boolean = JSON.parse(localStorage.getItem('loggedIn') || 'false')\n\n    LoggingIn(value:boolean) {\n        this.isLoggedIn = value;\r\n        localStorage.setItem('loggedIn', 'true');\r\n    }\n\n    get isUserLoggedIn() {\n        return JSON.parse(localStorage.getItem('loggedIn') || this.isLoggedIn.toString())\r\n    }\n  \n    Login(loginInfo) {\n\r\n        return this.http.post(\"api/account/login\", loginInfo,\r\n            {\r\n                observe:'response',\r\n                responseType: 'text'\r\n            });\r\n    }\n\n    Register(registerInfo) {\n\n        return this.http.post(\"api/account/register\", registerInfo,{\r\n            observe: 'response',\r\n            responseType: 'json'\r\n        });\r\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Device } from './device';\nimport { Http, Response } from '@angular/http';\nimport { DMSUser } from './device'\n\n@Injectable()\n\nexport class DataService {\n\n    constructor(private http: HttpClient) {\n\n    }\n\n    public devices: Device[] = [];\n\n    getDevices(): Observable<any> {\n\r\n        return this.http.get(\"api/devices\")\r\n    }\n\n    removeDevice(id) {\n        return this.http.delete(\"api/devices/\" + id,\r\n            {\r\n                observe: 'response',\r\n                responseType: 'text'\r\n            });\r\n    }\n\n    assignDevice(id) {\n        return this.http.patch(\"api/devices/assign/\" + id, { Name: localStorage.getItem('user') },\r\n            {\r\n                observe: 'response',\r\n                responseType: 'text'\r\n            });\r\n    }\n    unassignDevice(id) {\n        return this.http.patch(\"api/devices/unassign/\" + id,\r\n            {\r\n                observe: 'response',\r\n                responseType: 'text'\r\n            });\r\n    }\n\n    addDevice(addInfo) {\n\r\n        return this.http.post(\"api/devices\", addInfo,\r\n            {\r\n                observe: 'response',\r\n                responseType: 'text'\r\n            });\r\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}